#!/bin/sh /etc/rc.common

START=99
USE_PROCD=1

PROG="$(which sing-box)"

DNSMASQ_UCI_CONFIG=$(uci -q show "dhcp.@dnsmasq[0]" | awk 'NR==1 {split($0, conf, /[.=]/); print conf[2]}')
if [ -f "/tmp/etc/dnsmasq.conf.$DNSMASQ_UCI_CONFIG" ]; then
    DNSMASQ_DIR="$(awk -F '=' '/^conf-dir=/ {print $2}' "/tmp/etc/dnsmasq.conf.$DNSMASQ_UCI_CONFIG")/dnsmasq-sing.d"
else
    DNSMASQ_DIR="/tmp/dnsmasq.d/dnsmasq-sing.d"
fi

start_service() {
    config_load sing-box

    local enabled; config_get_bool enabled "main" "enabled" 0
    [ "$enabled" = "1" ] || return 0

    local conffile workdir remote url auto_restart restart_cron
    config_get conffile "main" "conffile" "/etc/sing-box/config.json"
    config_get workdir "main" "workdir" "/etc/sing-box"
    config_get remote "subscription" "remote" 1
    config_get url "subscription" "url"
    config_get_bool auto_restart "subscription" "auto_restart" 1
    config_get restart_cron "subscription" "restart_cron" "0 5 * * *"

    local profile_file a
    if [ "$remote" -gt "0" ] && [ -n "$url" ]; then
        a=1
        for i in $url; do
            if (curl -s -f -A sing-box --connect-timeout 15 --retry 3 -L -X GET -o $workdir/config.tmp $i); then
                mv $workdir/config.tmp $workdir/subscription$a.json
            else
                [ -f "$workdir/config.tmp" ] && rm -f $workdir/config.tmp
            fi
            let a++
        done
        if [ -f "$workdir/subscription$remote.json" ]; then
            profile_file="$workdir/subscription$remote.json"
        else
            return 0
        fi
    elif [ "$remote" = "0" ] && [ -f "$workdir/sing-box.json" ]; then
        profile_file="$workdir/sing-box.json"
    else
        return 0
    fi

    ucode -S $workdir/scripts/generate_config.uc

    local dns_port; config_get dns_port "inbounds" "dns_port" "2053"
    mkdir -p $DNSMASQ_DIR
    echo -e "conf-dir=$DNSMASQ_DIR" > $DNSMASQ_DIR/../dnsmasq-sing.conf
    cat <<-EOF >> $DNSMASQ_DIR/redirect-dns.conf
no-poll
no-resolv
server=127.0.0.1#$dns_port
EOF
    /etc/init.d/dnsmasq restart 2>/dev/null

    procd_open_instance sing-box
    procd_set_param command $PROG run -c $conffile -D $workdir

    procd_set_param user root
    procd_set_param file $conffile
    procd_set_param limits core="unlimited"
    procd_set_param limits nofile="1000000 1000000"
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param respawn

    procd_close_instance

    ip rule add fwmark 1 table 100
    ip route add local 0.0.0.0/0 dev lo table 100

    utpl -S $workdir/scripts/firewall_post.ut | nft -f -

    local bridge_nf_call_iptables; bridge_nf_call_iptables=$(sysctl -e -n net.bridge.bridge-nf-call-iptables)
    if [ "$bridge_nf_call_iptables" = "1" ]; then
        touch $workdir/br_netfilter.flag
        sysctl -q -w net.bridge.bridge-nf-call-iptables=0
    fi

    if [ "$auto_restart" = "1" ]; then
        sed -i '/sing-box/d' /etc/crontabs/root
        echo -e "$restart_cron /etc/init.d/sing-box restart" >> /etc/crontabs/root
        /etc/init.d/cron restart
    fi
}

stop_service() {
    config_load sing-box

    local output; config_get output "log" "output" "/var/log/sing-box.log"
    rm -f $output

    ip rule del fwmark 1 table 100 2>/dev/null
    ip route del local 0.0.0.0/0 dev lo table 100 2>/dev/null

    nft delete table inet sing-box 2>/dev/null

    rm -rf $DNSMASQ_DIR/../dnsmasq-sing.conf $DNSMASQ_DIR
    /etc/init.d/dnsmasq restart 2>/dev/null

    local workdir; config_get workdir "main" "workdir" "/etc/sing-box"
    if [ -f "$workdir/br_netfilter.flag" ]; then
        rm -f $workdir/br_netfilter.flag
        sysctl -q -w net.bridge.bridge-nf-call-iptables=1
    fi

    sed -i '/sing-box/d' /etc/crontabs/root
    /etc/init.d/cron restart
}
